type Query {
  getMyProfile: User!
  getCommentsList: [Comment!]!
}

type Mutation {
  postComment(content: String!): Comment!
  updateMyProfile(id: ID!, name: String!): User!

  deleteComment: Comment!

  signup(email: String!, password: String!, name: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
}

type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  name: String!
  email: String!
  comments: [Comment]
}

type Recommendation {
  id: ID!
  title: String!
  author: String!
  description: String!
  shopUrl: String!
  imageUrl: String!
  comments: [Comment]
  section: Section
}

scalar Date

type Comment {
  id: ID!
  createdAt: Date!
  content: String!
  postedBy: User
  belongTo: Recommendation
}

type Section {
  id: ID!
  name: String!
  recommendations: [Recommendation]
}
